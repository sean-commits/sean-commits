{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getYearStart } from '@wojtekmaj/date-utils';\nimport TileGroup from '../TileGroup.js';\nimport Year from './Year.js';\nimport { getBeginOfDecadeYear } from '../shared/dates.js';\nexport default function Years(props) {\n  var activeStartDate = props.activeStartDate,\n    hover = props.hover,\n    showNeighboringDecade = props.showNeighboringDecade,\n    value = props.value,\n    valueType = props.valueType,\n    otherProps = __rest(props, [\"activeStartDate\", \"hover\", \"showNeighboringDecade\", \"value\", \"valueType\"]);\n  var start = getBeginOfDecadeYear(activeStartDate);\n  var end = start + (showNeighboringDecade ? 11 : 9);\n  return _jsx(TileGroup, {\n    className: \"react-calendar__decade-view__years\",\n    dateTransform: getYearStart,\n    dateType: \"year\",\n    end: end,\n    hover: hover,\n    renderTile: function (_a) {\n      var date = _a.date,\n        otherTileProps = __rest(_a, [\"date\"]);\n      return _jsx(Year, __assign({}, otherProps, otherTileProps, {\n        activeStartDate: activeStartDate,\n        currentDecade: start,\n        date: date\n      }), date.getTime());\n    },\n    start: start,\n    value: value,\n    valueType: valueType\n  });\n}","map":null,"metadata":{},"sourceType":"module"}