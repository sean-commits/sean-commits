{"ast":null,"code":"var _jsxFileName = \"/Users/seanmorris/Desktop/sean-and-lizzie/src/components/StickyNoteBoard.js\";\nimport React, { useState, useEffect } from 'react';\nfunction StickyNoteBoard({\n  currentUser\n}) {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [noteColor, setNoteColor] = useState('#ffff99'); // Default yellow\n\n  const colors = [{\n    value: '#ffff99',\n    label: 'Yellow'\n  }, {\n    value: '#ff9999',\n    label: 'Pink'\n  }, {\n    value: '#99ff99',\n    label: 'Green'\n  }, {\n    value: '#9999ff',\n    label: 'Blue'\n  }, {\n    value: '#ffcc99',\n    label: 'Orange'\n  }];\n\n  // Load notes from localStorage on component mount\n  useEffect(() => {\n    const storedNotes = localStorage.getItem('stickyNotes');\n    if (storedNotes) {\n      setNotes(JSON.parse(storedNotes));\n    }\n  }, []);\n\n  // Save notes to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('stickyNotes', JSON.stringify(notes));\n  }, [notes]);\n  const addNote = () => {\n    if (newNote.trim() && currentUser) {\n      setNotes([...notes, {\n        text: newNote,\n        color: noteColor,\n        user: currentUser,\n        timestamp: new Date().toLocaleString()\n      }]);\n      setNewNote('');\n    } else if (!currentUser) {\n      alert('Please sign in to add a note!');\n    }\n  };\n  const removeNote = index => {\n    const updatedNotes = [...notes];\n    updatedNotes.splice(index, 1);\n    setNotes(updatedNotes);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCDD Sticky Notes \\uD83D\\uDCDD\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: newNote,\n    onChange: e => setNewNote(e.target.value),\n    placeholder: currentUser ? \"Write your note here...\" : \"Sign in to leave a note\",\n    rows: \"3\",\n    style: {\n      width: '80%',\n      padding: '10px',\n      margin: '10px 0'\n    },\n    disabled: !currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: noteColor,\n    onChange: e => setNoteColor(e.target.value),\n    style: {\n      marginRight: '10px'\n    },\n    disabled: !currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, colors.map(color => /*#__PURE__*/React.createElement(\"option\", {\n    key: color.value,\n    value: color.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, color.label))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addNote,\n    disabled: !currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Add Note\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      gap: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, notes.map((note, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      backgroundColor: note.color,\n      padding: '15px',\n      width: '150px',\n      minHeight: '150px',\n      boxShadow: '5px 5px 7px rgba(33,33,33,.7)',\n      transform: `rotate(${Math.random() * 10 - 5}deg)`,\n      position: 'relative',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: 'bold',\n      borderBottom: '1px solid #000',\n      paddingBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"From: \", note.user), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      wordWrap: 'break-word',\n      margin: '10px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, note.text), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '10px',\n      position: 'absolute',\n      bottom: '30px',\n      left: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, note.timestamp)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeNote(index),\n    style: {\n      position: 'absolute',\n      bottom: '5px',\n      right: '5px',\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: '#ff0000',\n      cursor: 'pointer',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"X\")))));\n}\nexport default StickyNoteBoard;","map":{"version":3,"names":["React","useState","useEffect","StickyNoteBoard","currentUser","notes","setNotes","newNote","setNewNote","noteColor","setNoteColor","colors","value","label","storedNotes","localStorage","getItem","JSON","parse","setItem","stringify","addNote","trim","text","color","user","timestamp","Date","toLocaleString","alert","removeNote","index","updatedNotes","splice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","onChange","e","target","placeholder","rows","width","padding","margin","disabled","marginRight","map","key","onClick","display","flexWrap","justifyContent","gap","note","backgroundColor","minHeight","boxShadow","transform","Math","random","position","flexDirection","fontWeight","borderBottom","paddingBottom","wordWrap","fontSize","bottom","left","right","border","cursor"],"sources":["/Users/seanmorris/Desktop/sean-and-lizzie/src/components/StickyNoteBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction StickyNoteBoard({ currentUser }) {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [noteColor, setNoteColor] = useState('#ffff99'); // Default yellow\n\n  const colors = [\n    { value: '#ffff99', label: 'Yellow' },\n    { value: '#ff9999', label: 'Pink' },\n    { value: '#99ff99', label: 'Green' },\n    { value: '#9999ff', label: 'Blue' },\n    { value: '#ffcc99', label: 'Orange' }\n  ];\n\n  // Load notes from localStorage on component mount\n  useEffect(() => {\n    const storedNotes = localStorage.getItem('stickyNotes');\n    if (storedNotes) {\n      setNotes(JSON.parse(storedNotes));\n    }\n  }, []);\n\n  // Save notes to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('stickyNotes', JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = () => {\n    if (newNote.trim() && currentUser) {\n      setNotes([...notes, { \n        text: newNote, \n        color: noteColor,\n        user: currentUser,\n        timestamp: new Date().toLocaleString()\n      }]);\n      setNewNote('');\n    } else if (!currentUser) {\n      alert('Please sign in to add a note!');\n    }\n  };\n\n  const removeNote = (index) => {\n    const updatedNotes = [...notes];\n    updatedNotes.splice(index, 1);\n    setNotes(updatedNotes);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>📝 Sticky Notes 📝</h2>\n      <div style={{textAlign: 'center', marginBottom: '20px'}}>\n        <textarea\n          value={newNote}\n          onChange={(e) => setNewNote(e.target.value)}\n          placeholder={currentUser ? \"Write your note here...\" : \"Sign in to leave a note\"}\n          rows=\"3\"\n          style={{width: '80%', padding: '10px', margin: '10px 0'}}\n          disabled={!currentUser}\n        />\n        <div>\n          <select \n            value={noteColor} \n            onChange={(e) => setNoteColor(e.target.value)}\n            style={{marginRight: '10px'}}\n            disabled={!currentUser}\n          >\n            {colors.map(color => (\n              <option key={color.value} value={color.value}>\n                {color.label}\n              </option>\n            ))}\n          </select>\n          <button onClick={addNote} disabled={!currentUser}>Add Note</button>\n        </div>\n      </div>\n      \n      <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        gap: '15px'\n      }}>\n        {notes.map((note, index) => (\n          <div key={index} style={{\n            backgroundColor: note.color,\n            padding: '15px',\n            width: '150px',\n            minHeight: '150px',\n            boxShadow: '5px 5px 7px rgba(33,33,33,.7)',\n            transform: `rotate(${Math.random() * 10 - 5}deg)`,\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between'\n          }}>\n            <div>\n              <p style={{fontWeight: 'bold', borderBottom: '1px solid #000', paddingBottom: '5px'}}>\n                From: {note.user}\n              </p>\n              <div style={{wordWrap: 'break-word', margin: '10px 0'}}>\n                {note.text}\n              </div>\n              <p style={{fontSize: '10px', position: 'absolute', bottom: '30px', left: '5px'}}>\n                {note.timestamp}\n              </p>\n            </div>\n            <button \n              onClick={() => removeNote(index)}\n              style={{\n                position: 'absolute',\n                bottom: '5px',\n                right: '5px',\n                backgroundColor: 'transparent',\n                border: 'none',\n                color: '#ff0000',\n                cursor: 'pointer',\n                fontWeight: 'bold'\n              }}\n            >\n              X\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default StickyNoteBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}