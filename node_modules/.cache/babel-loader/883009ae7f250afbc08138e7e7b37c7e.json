{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getUserLocale } from 'get-user-locale';\nimport { getCenturyLabel, getDecadeLabel, getBeginNext, getBeginNext2, getBeginPrevious, getBeginPrevious2, getEndPrevious, getEndPrevious2 } from '../shared/dates.js';\nimport { formatMonthYear as defaultFormatMonthYear, formatYear as defaultFormatYear } from '../shared/dateFormatter.js';\nvar className = 'react-calendar__navigation';\nexport default function Navigation(_a) {\n  var activeStartDate = _a.activeStartDate,\n    drillUp = _a.drillUp,\n    _b = _a.formatMonthYear,\n    formatMonthYear = _b === void 0 ? defaultFormatMonthYear : _b,\n    _c = _a.formatYear,\n    formatYear = _c === void 0 ? defaultFormatYear : _c,\n    locale = _a.locale,\n    maxDate = _a.maxDate,\n    minDate = _a.minDate,\n    _d = _a.navigationAriaLabel,\n    navigationAriaLabel = _d === void 0 ? '' : _d,\n    navigationAriaLive = _a.navigationAriaLive,\n    navigationLabel = _a.navigationLabel,\n    _e = _a.next2AriaLabel,\n    next2AriaLabel = _e === void 0 ? '' : _e,\n    _f = _a.next2Label,\n    next2Label = _f === void 0 ? '»' : _f,\n    _g = _a.nextAriaLabel,\n    nextAriaLabel = _g === void 0 ? '' : _g,\n    _h = _a.nextLabel,\n    nextLabel = _h === void 0 ? '›' : _h,\n    _j = _a.prev2AriaLabel,\n    prev2AriaLabel = _j === void 0 ? '' : _j,\n    _k = _a.prev2Label,\n    prev2Label = _k === void 0 ? '«' : _k,\n    _l = _a.prevAriaLabel,\n    prevAriaLabel = _l === void 0 ? '' : _l,\n    _m = _a.prevLabel,\n    prevLabel = _m === void 0 ? '‹' : _m,\n    setActiveStartDate = _a.setActiveStartDate,\n    showDoubleView = _a.showDoubleView,\n    view = _a.view,\n    views = _a.views;\n  var drillUpAvailable = views.indexOf(view) > 0;\n  var shouldShowPrevNext2Buttons = view !== 'century';\n  var previousActiveStartDate = getBeginPrevious(view, activeStartDate);\n  var previousActiveStartDate2 = shouldShowPrevNext2Buttons ? getBeginPrevious2(view, activeStartDate) : undefined;\n  var nextActiveStartDate = getBeginNext(view, activeStartDate);\n  var nextActiveStartDate2 = shouldShowPrevNext2Buttons ? getBeginNext2(view, activeStartDate) : undefined;\n  var prevButtonDisabled = function () {\n    if (previousActiveStartDate.getFullYear() < 0) {\n      return true;\n    }\n    var previousActiveEndDate = getEndPrevious(view, activeStartDate);\n    return minDate && minDate >= previousActiveEndDate;\n  }();\n  var prev2ButtonDisabled = shouldShowPrevNext2Buttons && function () {\n    if (previousActiveStartDate2.getFullYear() < 0) {\n      return true;\n    }\n    var previousActiveEndDate = getEndPrevious2(view, activeStartDate);\n    return minDate && minDate >= previousActiveEndDate;\n  }();\n  var nextButtonDisabled = maxDate && maxDate < nextActiveStartDate;\n  var next2ButtonDisabled = shouldShowPrevNext2Buttons && maxDate && maxDate < nextActiveStartDate2;\n  function onClickPrevious() {\n    setActiveStartDate(previousActiveStartDate, 'prev');\n  }\n  function onClickPrevious2() {\n    setActiveStartDate(previousActiveStartDate2, 'prev2');\n  }\n  function onClickNext() {\n    setActiveStartDate(nextActiveStartDate, 'next');\n  }\n  function onClickNext2() {\n    setActiveStartDate(nextActiveStartDate2, 'next2');\n  }\n  function renderLabel(date) {\n    var label = function () {\n      switch (view) {\n        case 'century':\n          return getCenturyLabel(locale, formatYear, date);\n        case 'decade':\n          return getDecadeLabel(locale, formatYear, date);\n        case 'year':\n          return formatYear(locale, date);\n        case 'month':\n          return formatMonthYear(locale, date);\n        default:\n          throw new Error(\"Invalid view: \".concat(view, \".\"));\n      }\n    }();\n    return navigationLabel ? navigationLabel({\n      date: date,\n      label: label,\n      locale: locale || getUserLocale() || undefined,\n      view: view\n    }) : label;\n  }\n  function renderButton() {\n    var labelClassName = \"\".concat(className, \"__label\");\n    return _jsxs(\"button\", {\n      \"aria-label\": navigationAriaLabel,\n      \"aria-live\": navigationAriaLive,\n      className: labelClassName,\n      disabled: !drillUpAvailable,\n      onClick: drillUp,\n      style: {\n        flexGrow: 1\n      },\n      type: \"button\",\n      children: [_jsx(\"span\", {\n        className: \"\".concat(labelClassName, \"__labelText \").concat(labelClassName, \"__labelText--from\"),\n        children: renderLabel(activeStartDate)\n      }), showDoubleView ? _jsxs(_Fragment, {\n        children: [_jsx(\"span\", {\n          className: \"\".concat(labelClassName, \"__divider\"),\n          children: \" \\u2013 \"\n        }), _jsx(\"span\", {\n          className: \"\".concat(labelClassName, \"__labelText \").concat(labelClassName, \"__labelText--to\"),\n          children: renderLabel(nextActiveStartDate)\n        })]\n      }) : null]\n    });\n  }\n  return _jsxs(\"div\", {\n    className: className,\n    children: [prev2Label !== null && shouldShowPrevNext2Buttons ? _jsx(\"button\", {\n      \"aria-label\": prev2AriaLabel,\n      className: \"\".concat(className, \"__arrow \").concat(className, \"__prev2-button\"),\n      disabled: prev2ButtonDisabled,\n      onClick: onClickPrevious2,\n      type: \"button\",\n      children: prev2Label\n    }) : null, prevLabel !== null && _jsx(\"button\", {\n      \"aria-label\": prevAriaLabel,\n      className: \"\".concat(className, \"__arrow \").concat(className, \"__prev-button\"),\n      disabled: prevButtonDisabled,\n      onClick: onClickPrevious,\n      type: \"button\",\n      children: prevLabel\n    }), renderButton(), nextLabel !== null && _jsx(\"button\", {\n      \"aria-label\": nextAriaLabel,\n      className: \"\".concat(className, \"__arrow \").concat(className, \"__next-button\"),\n      disabled: nextButtonDisabled,\n      onClick: onClickNext,\n      type: \"button\",\n      children: nextLabel\n    }), next2Label !== null && shouldShowPrevNext2Buttons ? _jsx(\"button\", {\n      \"aria-label\": next2AriaLabel,\n      className: \"\".concat(className, \"__arrow \").concat(className, \"__next2-button\"),\n      disabled: next2ButtonDisabled,\n      onClick: onClickNext2,\n      type: \"button\",\n      children: next2Label\n    }) : null]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}