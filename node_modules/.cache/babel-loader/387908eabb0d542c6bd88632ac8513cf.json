{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getDecadeStart, getDecadeEnd, getCenturyStart } from '@wojtekmaj/date-utils';\nimport Tile from '../Tile.js';\nimport { getDecadeLabel } from '../shared/dates.js';\nimport { formatYear as defaultFormatYear } from '../shared/dateFormatter.js';\nvar className = 'react-calendar__century-view__decades__decade';\nexport default function Decade(_a) {\n  var _b = _a.classes,\n    classes = _b === void 0 ? [] : _b,\n    currentCentury = _a.currentCentury,\n    _c = _a.formatYear,\n    formatYear = _c === void 0 ? defaultFormatYear : _c,\n    otherProps = __rest(_a, [\"classes\", \"currentCentury\", \"formatYear\"]);\n  var date = otherProps.date,\n    locale = otherProps.locale;\n  var classesProps = [];\n  if (classes) {\n    classesProps.push.apply(classesProps, classes);\n  }\n  if (className) {\n    classesProps.push(className);\n  }\n  if (getCenturyStart(date).getFullYear() !== currentCentury) {\n    classesProps.push(\"\".concat(className, \"--neighboringCentury\"));\n  }\n  return _jsx(Tile, __assign({}, otherProps, {\n    classes: classesProps,\n    maxDateTransform: getDecadeEnd,\n    minDateTransform: getDecadeStart,\n    view: \"century\",\n    children: getDecadeLabel(locale, formatYear, date)\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}